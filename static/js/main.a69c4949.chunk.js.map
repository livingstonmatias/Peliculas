{"version":3,"sources":["AppContext.js","components/Buscador.js","components/Loading.js","components/ModalDetallePelicula.js","components/CartaPelicula.js","components/BotonVerMas.js","containers/ListadoPeliculas.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","Buscador","useContext","setPeliculas","query","setQuery","setPagina","buscar","e","a","preventDefault","fetch","res","json","data","Response","Search","className","onSubmit","type","placeholder","value","onChange","target","Loading","ModalDetallePelicula","imdbID","useState","detallePelicula","setDetallePelicula","cerrarModal","window","$","modal","fetchDetallePelicula","onClick","id","tabIndex","role","Title","data-dismiss","aria-label","aria-hidden","src","Poster","class","Year","Rated","Runtime","Genre","Writer","Actors","Ratings","map","rating","key","Source","Value","CartaPelicula","Type","alt","BotonVerMas","peliculas","pagina","fetchMasPeliculas","length","ListadoPeliculas","pelicula","index","App","Provider","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a69c4949.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AppContext = createContext(null);\n","import React, { useContext, useState } from \"react\";\n\nimport { AppContext } from \"../AppContext\";\n\nconst Buscador = () => {\n  const { setPeliculas, query, setQuery, setPagina } = useContext(AppContext);\n\n  const buscar = async e => {\n    e.preventDefault();\n\n    // Reseteo numero de pagina\n    setPagina(2);\n\n    const res = await fetch(\n      \"https://www.omdbapi.com/?apikey=a24689ae&s=\" + query\n    );\n    const data = await res.json();\n\n    if (data.Response === \"True\") {\n      setPeliculas(data.Search);\n    }\n  };\n\n  return (\n    <div className=\"form-group py-4 row\">\n      <div className=\"col-lg-4 col-md-12 offset-lg-4\">\n        <form onSubmit={buscar}>\n          <input\n            type=\"text\"\n            className=\"form-control form-control-lg rounded-pill\"\n            placeholder=\"Buscar por el nombre de tu pelicula\"\n            value={query}\n            onChange={e => setQuery(e.target.value)}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Buscador;\n","import React from \"react\";\n\nconst Loading = () => {\n  return (\n    <div className=\"w-100 h-100 d-flex justify-content-center\">\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React, { useState } from \"react\";\n\nimport Loading from \"./Loading\";\n\nconst ModalDetallePelicula = ({ imdbID }) => {\n  const [detallePelicula, setDetallePelicula] = useState();\n\n  const abrirModal = () => {\n    window.$(`#modal-detalle-${imdbID}`).modal(\"show\");\n    fetchDetallePelicula();\n  };\n\n  const cerrarModal = () => {\n    window.$(`#modal-detalle-${imdbID}`).modal(\"hide\");\n  };\n\n  const fetchDetallePelicula = async () => {\n    const res = await fetch(\n      \"https://www.omdbapi.com/?apikey=a24689ae&i=\" + imdbID\n    );\n    const data = await res.json();\n\n    if (data.imdbID) {\n      setDetallePelicula(data);\n    }\n  };\n\n  return (\n    <>\n      <button className=\"btn btn-primary btn-sm\" onClick={abrirModal}>\n        Ver detalle\n      </button>\n      <div\n        id={`modal-detalle-${imdbID}`}\n        className=\"modal text-dark\"\n        tabIndex=\"-1\"\n        role=\"dialog\"\n      >\n        {detallePelicula && (\n          <div className=\"modal-dialog modal-lg\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">{detallePelicula.Title}</h5>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                  onClick={cerrarModal}\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n\n              <div className=\"modal-body row\">\n                <div className=\"col-lg-5 col-md-12 d-flex justify-content-center\">\n                  <img src={detallePelicula.Poster} />\n                </div>\n                <div className=\"col-lg-7 col-md-12\">\n                  <div className=\"d-flex flex-wrap\">\n                    <span class=\"badge badge-pill badge-info mx-1 my-1\">\n                      AÃ±o: {detallePelicula.Year}\n                    </span>\n\n                    <span class=\"badge badge-pill badge-info mx-1 my-1\">\n                      Clasificacion: {detallePelicula.Rated}\n                    </span>\n\n                    <span class=\"badge badge-pill badge-info mx-1 my-1\">\n                      Duracion: {detallePelicula.Runtime}\n                    </span>\n\n                    <span class=\"badge badge-pill badge-info mx-1 my-1\">\n                      Genero: {detallePelicula.Genre}\n                    </span>\n                  </div>\n\n                  <div className=\"mt-3\">{detallePelicula.Writer}</div>\n\n                  <div className=\"mt-3\">\n                    <strong>Actores:</strong> {detallePelicula.Actors}\n                  </div>\n\n                  <div className=\"mt-3\">\n                    <ul class=\"list-group\">\n                      {detallePelicula.Ratings.map(rating => {\n                        return (\n                          <li\n                            class=\"list-group-item d-flex justify-content-between\"\n                            key={rating.Source}\n                          >\n                            <strong>{rating.Source}</strong>\n                            <span>{rating.Value}</span>\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  onClick={cerrarModal}\n                >\n                  Cerrar\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {!detallePelicula && <Loading></Loading>}\n      </div>\n    </>\n  );\n};\n\nexport default ModalDetallePelicula;\n","import React from \"react\";\nimport ModalDetallePelicula from \"./ModalDetallePelicula\";\n\nconst CartaPelicula = ({ Title, Year, imdbID, Type, Poster }) => {\n  return (\n    <div className=\"card w-100 h-100\">\n      <img src={Poster} className=\"card-img-top\" alt=\"...\" />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{Title}</h5>\n        <div className=\"card-text d-flex justify-content-between\">\n          <span>{Type}</span>\n          <span>{Year}</span>\n        </div>\n\n        <ModalDetallePelicula imdbID={imdbID}></ModalDetallePelicula>\n      </div>\n    </div>\n  );\n};\n\nexport default CartaPelicula;\n","import React, { useContext, useState } from \"react\";\n\nimport { AppContext } from \"../AppContext\";\n\nconst BotonVerMas = () => {\n  const { peliculas, setPeliculas, query, pagina, setPagina } = useContext(\n    AppContext\n  );\n\n  const fetchMasPeliculas = async () => {\n    const res = await fetch(\n      `https://www.omdbapi.com/?apikey=a24689ae&s=${query}&page=${pagina}`\n    );\n    const data = await res.json();\n\n    if (data.Response === \"True\") {\n      setPagina(pagina + 1);\n      setPeliculas([...peliculas, ...data.Search]);\n    }\n  };\n\n  return (\n    <div>\n      {peliculas.length > 0 && (\n        <div className=\"d-flex justify-content-center mt-4 mb-2 w-100\">\n          <button\n            className=\"btn btn-primary btn-sm\"\n            onClick={fetchMasPeliculas}\n          >\n            Ver mas\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BotonVerMas;\n","import React, { useContext } from \"react\";\n\nimport { AppContext } from \"../AppContext\";\nimport CartaPelicula from \"../components/CartaPelicula\";\nimport BotonVerMas from \"../components/BotonVerMas\";\n\nconst ListadoPeliculas = () => {\n  const { peliculas } = useContext(AppContext);\n\n  return (\n    <>\n      <div className=\"listado-peliculas\">\n        {peliculas.map((pelicula, index) => {\n          return (\n            <div key={index} className=\"text-dark w-100\">\n              <CartaPelicula {...pelicula}></CartaPelicula>\n            </div>\n          );\n        })}\n      </div>\n      <BotonVerMas></BotonVerMas>\n    </>\n  );\n};\n\nexport default ListadoPeliculas;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Buscador from \"./components/Buscador\";\nimport ListadoPeliculas from \"./containers/ListadoPeliculas\";\n\nimport { AppContext } from \"./AppContext\";\n\nfunction App() {\n  const [peliculas, setPeliculas] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [pagina, setPagina] = useState(2);\n\n  return (\n    <div className=\"App bg-dark text-light px-2\">\n      <AppContext.Provider\n        value={{ peliculas, setPeliculas, query, setQuery, pagina, setPagina }}\n      >\n        <Buscador></Buscador>\n\n        <ListadoPeliculas></ListadoPeliculas>\n      </AppContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}